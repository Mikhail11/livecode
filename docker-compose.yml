version: '3.9'

# чтобы env-переменные были доступны в самом docker-compose-файле:

# docker-compose --env-file ./apps/server/.env.development up

# если рядом с docker-compose.yaml лежит файл .env, то docker-compose будет использовать его по-умолчанию
services:
  postgres:
    image: postgres:17
    restart: always
    container_name: postgres_container

    env_file:
      - ./apps/server/.env.development

    ports:
      - '${POSTGRES_PORT:-5433}:5432'
    volumes:
      - ./pgdata:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4:9.1.0
    restart: always
    container_name: pgadmin4_container
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=pgadmin4
    ports:
      - '5050:80'
    volumes:
      - ./pgadmin-data:/var/lib/pgadmin
    depends_on:
      - postgres

  code_executor:
    image: ghcr.io/engineer-man/piston
    container_name: piston_api
    restart: always
    privileged: true
    ports:
      - '${CODE_EXECUTOR_PORT:-2000}:2000'
    volumes:
      - ./piston-data/packages:/piston/packages
    tmpfs:
      - /tmp:exec

  y-websocket-server:
    build:
      context: .
      dockerfile: Dockerfile.y-websocket-server
    container_name: y_websocket_server
    restart: always

    environment:
      # Требуется для того, чтобы y-websocket внутри контейнера прослушивал обращения к localhost на локальном компьютере. использование переменной HOST зашита в y-websocket-server
      - HOST=0.0.0.0

    ports:
      # 1234 - порт, который слушает y-websocket-server по-умолчанию
      - '${YJS_WEBSOCKET_PORT}:1234'
